______________________________________________________________________


18MA20015 | Harshal Dupare | Lab 10 | 24-3-2021 |

______________________________________________________________________


Q1

Greedy method works on this problem
INPUT:
4
4
8 7 9 9
5 2 7 8
6 1 4 9
2 3 2 6
0

OUTPUT:

harshald@DESKTOP-D3B1M51:/mnt/c/Users/harshal d/Desktop/OR LAB$ ./a.out
Number of Applicants: 4
Number of Jobs: 4
Enter cost of assigning i'th person to j'th job for next 4 lines in the format:
c[i][0] c[i][1]... c[i][m-1]
8 7 9 9
5 2 7 8
6 1 4 9
2 3 2 6
Initial Table is:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 8.000000 |           0 : 7.000000 |           0 : 9.000000 |           0 : 9.000000 |                       0/1
                     1 |           0 : 5.000000 |           0 : 2.000000 |           0 : 7.000000 |           0 : 8.000000 |                       0/1
                     2 |           0 : 6.000000 |           0 : 1.000000 |           0 : 4.000000 |           0 : 9.000000 |                       0/1
                     3 |           0 : 2.000000 |           0 : 3.000000 |           0 : 2.000000 |           0 : 6.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |
Input what method to use for calculating min number of crossing line:
 "0" for Greedy method ( FAST but sometimes doesn't give exact solution)
 "1" for Brute Force method ( SLOW but gives exact solution)
 0


After reducing the inital rows and columns we get:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 1.000000 |           0 : 0.000000 |           0 : 2.000000 |           0 : 0.000000 |                       0/1
                     1 |           0 : 3.000000 |           0 : 0.000000 |           0 : 5.000000 |           0 : 4.000000 |                       0/1
                     2 |           0 : 5.000000 |           0 : 0.000000 |           0 : 3.000000 |           0 : 6.000000 |                       0/1
                     3 |           0 : 0.000000 |           0 : 1.000000 |           0 : 0.000000 |           0 : 2.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |
Iteration number 1
Selected Zeros are at location (row_id, column_id):
(1, 1), (3, 0), (0, 3),
Crossed Rows:0, 3,
Crossed Column:1,
Table is:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |         * 0 : 1.000000 |         * 0 : 0.000000 |         * 0 : 2.000000 |         * 0 : 0.000000 |                       0/1
                     1 |           0 : 3.000000 |         * 0 : 0.000000 |           0 : 5.000000 |           0 : 4.000000 |                       0/1
                     2 |           0 : 5.000000 |         * 0 : 0.000000 |           0 : 3.000000 |           0 : 6.000000 |                       0/1
                     3 |         * 0 : 0.000000 |         * 0 : 1.000000 |         * 0 : 0.000000 |         * 0 : 2.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |

Optimality hasn't yet reached

Smallest uncovered element found at: (1, 0) with value of 3
Optimal solution found
Iterations terminated

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 1.000000 |           0 : 3.000000 |           0 : 2.000000 |           1 : 0.000000 |                       1/1
                     1 |           1 : 0.000000 |           0 : 0.000000 |           0 : 2.000000 |           0 : 1.000000 |                       1/1
                     2 |           0 : 2.000000 |           1 : 0.000000 |           0 : 0.000000 |           0 : 3.000000 |                       1/1
                     3 |           0 : 0.000000 |           0 : 4.000000 |           1 : 0.000000 |           0 : 2.000000 |                       1/1
                  Jobs |                    1/1 |                    1/1 |                    1/1 |                    1/1 |
Final Optimal cost is :17
Solution is:
Applicant 0 Assigned to 3 Job
Applicant 1 Assigned to 0 Job
Applicant 2 Assigned to 1 Job
Applicant 3 Assigned to 2 Job


_________________________________________________________________________________________________

## Trying brute force solution too for varification

_________________________________________________________________________________________________

harshald@DESKTOP-D3B1M51:/mnt/c/Users/harshal d/Desktop/OR LAB$ ./a.out
Number of Applicants: 4
Number of Jobs: 4
Enter cost of assigning i'th person to j'th job for next 4 lines in the format:
c[i][0] c[i][1]... c[i][m-1]
8 7 9 9
5 2 7 8
6 1 4 9
2 3 2 6
Initial Table is:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 8.000000 |           0 : 7.000000 |           0 : 9.000000 |           0 : 9.000000 |                       0/1
                     1 |           0 : 5.000000 |           0 : 2.000000 |           0 : 7.000000 |           0 : 8.000000 |                       0/1
                     2 |           0 : 6.000000 |           0 : 1.000000 |           0 : 4.000000 |           0 : 9.000000 |                       0/1
                     3 |           0 : 2.000000 |           0 : 3.000000 |           0 : 2.000000 |           0 : 6.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |
Input what method to use for calculating min number of crossing line:
 "0" for Greedy method ( FAST but sometimes doesn't give exact solution)
 "1" for Brute Force method ( SLOW but gives exact solution)
 1


After reducing the inital rows and columns we get:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 1.000000 |           0 : 0.000000 |           0 : 2.000000 |           0 : 0.000000 |                       0/1
                     1 |           0 : 3.000000 |           0 : 0.000000 |           0 : 5.000000 |           0 : 4.000000 |                       0/1
                     2 |           0 : 5.000000 |           0 : 0.000000 |           0 : 3.000000 |           0 : 6.000000 |                       0/1
                     3 |           0 : 0.000000 |           0 : 1.000000 |           0 : 0.000000 |           0 : 2.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |
Iteration number 1
Crossed Rows:3,
Crossed Columns:1, 3,
Table is:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 1.000000 |         * 0 : 0.000000 |           0 : 2.000000 |         * 0 : 0.000000 |                       0/1
                     1 |           0 : 3.000000 |         * 0 : 0.000000 |           0 : 5.000000 |         * 0 : 4.000000 |                       0/1
                     2 |           0 : 5.000000 |         * 0 : 0.000000 |           0 : 3.000000 |         * 0 : 6.000000 |                       0/1
                     3 |         * 0 : 0.000000 |         * 0 : 1.000000 |         * 0 : 0.000000 |         * 0 : 2.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |

Smallest uncovered element found at: (0, 0) with value of 1
Iteration number 2
Crossed Rows:0, 3,
Crossed Columns:1,
Table is:

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |         * 0 : 0.000000 |         * 0 : 0.000000 |         * 0 : 1.000000 |         * 0 : 0.000000 |                       0/1
                     1 |           0 : 2.000000 |         * 0 : 0.000000 |           0 : 4.000000 |           0 : 4.000000 |                       0/1
                     2 |           0 : 4.000000 |         * 0 : 0.000000 |           0 : 2.000000 |           0 : 6.000000 |                       0/1
                     3 |         * 0 : 0.000000 |         * 0 : 2.000000 |         * 0 : 0.000000 |         * 0 : 3.000000 |                       0/1
                  Jobs |                    0/1 |                    0/1 |                    0/1 |                    0/1 |

Smallest uncovered element found at: (1, 0) with value of 2
Optimal solution found
Iterations terminated

                       |                      0 |                      1 |                      2 |                      3 |               Applicants
                     0 |           0 : 0.000000 |           0 : 2.000000 |           0 : 1.000000 |           1 : 0.000000 |                       1/1
                     1 |           1 : 0.000000 |           0 : 0.000000 |           0 : 2.000000 |           0 : 2.000000 |                       1/1
                     2 |           0 : 2.000000 |           1 : 0.000000 |           0 : 0.000000 |           0 : 4.000000 |                       1/1
                     3 |           0 : 0.000000 |           0 : 4.000000 |           1 : 0.000000 |           0 : 3.000000 |                       1/1
                  Jobs |                    1/1 |                    1/1 |                    1/1 |                    1/1 |
Final Optimal cost is :17
Solution is:
Applicant 0 Assigned to 3 Job
Applicant 1 Assigned to 0 Job
Applicant 2 Assigned to 1 Job
Applicant 3 Assigned to 2 Job